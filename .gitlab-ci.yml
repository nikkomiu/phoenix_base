image: nikkoamiu/phoenix_framework:1.0

variables:
  POSTGRES_DB: phoenix_base_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  MIX_ENV: test

stages:
  - build
  - test
  - release
  - verify
  - push image
  - deploy

# COMPILE STAGE
compile:
  stage: build
  script:
    - mix deps.get --only test
    - mix compile
    - npm install
    - npm run deploy
  artifacts:
    untracked: true

# TEST STAGE
test:
  stage: test
  dependencies:
    - compile
  services:
    - postgres:latest
    - redis:latest
  script:
    - mix test

code_analysis:
  stage: test
  dependencies:
    - compile
  script:
    - mix credo --strict
  allow_failure: true

doc_analysis:
  stage: test
  dependencies:
    - compile
  script:
    - mix inch

test_coverage:
  stage: test
  dependencies:
    - compile
  services:
    - postgres:latest
    - redis:latest
  script:
    - mix coveralls

migratability:
  stage: test
  dependencies:
    - compile
  services:
    - postgres:latest
    - redis:latest
  before_script:
    - chmod +x deploy/db_migratable.sh
  script:
    - deploy/db_migratable.sh
  except:
    - tags
  allow_failure: true

mergability:
  stage: test
  image: debian:jessie
  before_script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "admin@nikkomiu.com"
    - git config --global user.name "CI"
  script:
    - git checkout master
    - git merge $CI_BUILD_REF
  only:
    - develop

# RELEASE STAGE
releasearaptor:
  stage: release
  before_script:
    - MIX_ENV=prod
  script:
    - npm install
    - npm run deploy
    - mix deps.get --only prod
    - mix compile
    - mix release --env=prod
  artifacts:
    name: $CI_PROJECT_NAME
    paths:
      - _build/prod/rel/

# PUSH IMAGE STAGE
containerize:
  stage: push image
  image: docker:latest
  dependencies:
    - releasearaptor
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF_NAME .
    - 'if [ "$CI_BUILD_REF_NAME" = "master" ]; then
        docker tag "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME" "$CI_REGISTRY_IMAGE";
        docker push "$CI_REGISTRY_IMAGE";
      else
        docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF_NAME;
      fi'

# DEPLOY STAGE
deploy:
  stage: deploy
  dependencies:
    - releasearaptor
  before_script:
    - apt-get update && apt-get install -y curl
    - MIX_ENV=prod mix compile
    - chmod +x deploy/setup.sh deploy/deploy.sh
    - deploy/setup.sh # Output setup (it may have important messages)
    - eval "$(deploy/setup.sh)"
  script:
    - MIX_ENV=prod mix ecto.migrate
    - deploy/deploy.sh
  only:
    - tags
